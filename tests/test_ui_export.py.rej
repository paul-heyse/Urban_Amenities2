diff a/tests/test_ui_export.py b/tests/test_ui_export.py	(rejected hunks)
@@ -1,63 +1,49 @@
 """Tests for UI export functionality."""

 from __future__ import annotations

 import tempfile
 from pathlib import Path

 import geopandas as gpd
 import pandas as pd
 import pytest

 from Urban_Amenities2.ui.export import (
     create_shareable_url,
     export_csv,
     export_geojson,
     export_parquet,
 )
+from tests.ui_factories import make_export_dataset


 @pytest.fixture
 def sample_data():
     """Create sample hex data for export testing."""
-    df = pd.DataFrame({
-        "hex_id": ["8928308280fffff", "8928308280bffff"],  # Valid H3 hex IDs
-        "state": ["CO", "CO"],
-        "metro": ["Denver", "Denver"],
-        "aucs": [75.0, 45.0],
-        "ea": [80.0, 50.0],
-        "lca": [70.0, 40.0],
-        "muhaa": [65.0, 35.0],
-        "jea": [85.0, 55.0],
-        "morr": [75.0, 45.0],
-        "cte": [60.0, 30.0],
-        "sou": [70.0, 40.0],
-    })
-    # Ensure hex_id is string type
-    df["hex_id"] = df["hex_id"].astype(str)
-    return df
+    return make_export_dataset()


 def test_export_csv(sample_data):
     """Test CSV export."""
     with tempfile.TemporaryDirectory() as tmpdir:
         output_path = Path(tmpdir) / "export.csv"
         export_csv(sample_data, output_path, include_geometry=True)

         # Verify file exists
         assert output_path.exists()

         # Load and verify content
         loaded = pd.read_csv(output_path)
         assert len(loaded) == len(sample_data)
         assert "hex_id" in loaded.columns
         assert "aucs" in loaded.columns
         assert "lat" in loaded.columns  # Added by include_geometry
         assert "lon" in loaded.columns


 def test_export_geojson(sample_data):
     """Test GeoJSON export."""
     with tempfile.TemporaryDirectory() as tmpdir:
         output_path = Path(tmpdir) / "export.geojson"
         export_geojson(sample_data, output_path)
